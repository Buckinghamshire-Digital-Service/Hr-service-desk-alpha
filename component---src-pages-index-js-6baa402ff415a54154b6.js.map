{"version":3,"sources":["webpack:///./src/components/Download/Download.jsx","webpack:///./src/components/LinkList/LinkListSimple.jsx","webpack:///./src/components/ButtonGroup/ButtonGroup.jsx","webpack:///./src/components/LinkList/LinkList.jsx","webpack:///./src/pages/index.js"],"names":["Download","props","className","to","onClick","Event","LinkListSimple","items","undefined","map","v","i","external","newWindow","key","href","url","rel","eventName","title","text","type","defaultProps","ButtonGroup","children","LinkList","link","parentPage","slug","content","summary","childMarkdownRemark","html","metaDescription","Heading","simple","Text","Button","tabIndex","aria-label","clickHandler","RootIndex","render","site","get","this","post","pageContext","Layout","location","hero","ga","gaConfig","id","basePath","pathname","name","Main","PageTitle","intro","childPages","isDouble","flush","childPagesSecondary","React","PureComponent"],"mappings":"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","file":"component---src-pages-index-js-6baa402ff415a54154b6.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst Download = props => {\n  return (\n    <div className={`panel panel--inverted panel--padding-small`}>\n      <Link to='/downloads' className='download-link lead flush padding--h-flush d-block' onClick={() => Event('Download items link','Click')}>\n        <span>Go to document download</span>\n        <span className='download download--small spaced-left'></span>\n      </Link>\n    </div>\n  )\n}\n\nexport default Download\n\n\n\n\n","import React from 'react'\nimport Heading from '../Heading/Heading.jsx'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst LinkListSimple = props => {\n  const items = props.items['en-US'] !== undefined ? props.items['en-US'] : props.items\n\n  return (\n    <ul className={`list ${props.className}`}>\n      {items && items.map((v, i) => {\n        const external = {'target': v.newWindow === true ? '_blank' : null}\n        return (\n          <li className='list__item' key={i}>\n            <a href={v.url} rel='noreferrer' className='list-item__link' onClick={() => Event(`${props.eventName}`, 'Click',v.title)} {...external}>\n              <Heading text={v.title} type='span' className='list-item__title has-chevron'/>\n            </a>\n          </li>\n        )\n      }\n    )}\n    </ul>\n  )\n}\n\nLinkListSimple.defaultProps = {\n  className: '',\n  eventName: 'Homepage external links'\n}\n\nexport default LinkListSimple","import React from 'react'\n\nconst ButtonGroup = props => {\n  return (\n    <div className={`button-group ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}\n\nButtonGroup.defaultProps ={\n  className: ''\n}\n\nexport default ButtonGroup\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Heading from '../Heading/Heading.jsx'\nimport Text from '../Text/Text.jsx'\nimport Button from '../Button/Button.jsx'\nimport ButtonGroup from '../ButtonGroup/ButtonGroup.jsx'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst ctaClick = (title) => {\n  Event('CTA links homepage','Click',title)\n}\n\nconst LinkList = props => {\n  const items = props.items['en-US'] !== undefined ? props.items['en-US'] : props.items\n\n  return (\n    <ul className={`list ${props.className}`}>\n      {items && items.map((v, i) => {\n        const link = (v.parentPage && v.parentPage.slug) !== undefined ? `/${v.parentPage.slug}/${v.slug}/` : `/${v.slug}/`\n        const content = (v.summary && v.summary.childMarkdownRemark.html) ? v.summary.childMarkdownRemark.html : v.metaDescription\n\n        return (\n          <li className='column is-half-tablet' key={i}>\n            <div className='list__item list__item--has-button'>\n              <Link to={link} className='list-item__link' onClick={() => Event('Top level links homepage','Click', v.title)}>\n                <Heading text={v.title} type={props.type} className={`list-item__title ${props.simple ? 'has-chevron' : ''}`}/>\n              </Link>\n              {content && <Text content={content} />}\n              <ButtonGroup className='button-group--fixed'>\n                <Button url={link} tabIndex='-1' className='btn--has-radius btn--primary btn--full-width' aria-label='Top level sections' clickHandler={() => ctaClick(v.title)} aria-label={`Find out more about ${v.title}`}>\n                  More on {v.title}\n                </Button>\n              </ButtonGroup>\n            </div>\n          </li>\n        )\n      }\n    )}\n    </ul>\n  )\n}\n\nLinkList.defaultProps = {\n  className: '',\n  type: 'h2'\n}\n\nexport default LinkList","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/Layout/Layout.jsx'\nimport ListItem from '../components/ListItem/ListItem.jsx'\nimport Heading from '../components/Heading/Heading.jsx'\nimport Text from '../components/Text/Text.jsx'\nimport LinkList from '../components/LinkList/LinkList.jsx'\nimport LinkListSimple from '../components/LinkList/LinkListSimple.jsx'\nimport Main from '../components/Main/Main.jsx'\nimport Icon from '../components/Icon/Icon.jsx'\nimport PageTitle from '../components/PageTitle/PageTitle.jsx'\nimport Download from '../components/Download/Download.jsx'\n\n\nclass RootIndex extends React.PureComponent {\n  render() {\n    const site = get(this, 'props.data.site.siteMetadata')\n    let post = get(this, 'props.data.contentfulHomePage')\n    const map = this.props.pageContext.map\n\n    return (\n      <Layout location={this.props.location} className='muted full-width' hero={post.hero} ga={site.gaConfig.id} map={map}>\n        <Helmet>\n          <title>{`${post.title} | ${site.title}`}</title>\n          <link rel='canonical' href={`${site.basePath}${this.props.location.pathname}`} />\n          <meta name='description' content={post.metaDescription} />    \n        </Helmet>\n        <Main  className='full-width'>\n          <div className='container'>\n            <PageTitle text={post.title} className='no-breadcrumb'/>\n            <Text className='intro lead' content={post.intro.childMarkdownRemark.html} />\n            {post.childPages && <LinkList isDouble items={post.childPages} className='raised columns'/>}\n          </div>\n\n          <div className='container'>\n            <Download flush/>\n          </div>\n          {post.childPagesSecondary && <div className='panel panel--flat panel--flush'><div className='container panel--padding-small'><Heading className='h3' text='Other areas' /><LinkListSimple type='h3' items={post.childPagesSecondary} simple className='simple simple--flat'/></div></div>}\n        </Main>\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\nquery HomeQuery {\n  site {\n    siteMetadata {\n      title\n      basePath\n      gaConfig {\n        id\n      }\n    }\n  }\n  contentfulHomePage {\n    id\n    title\n    metaTitle\n    metaDescription\n    intro {\n      childMarkdownRemark {\n        html\n      }\n    }\n    hero {\n      headline\n      subHeading\n      image {\n        title\n        description\n        file {\n          details {\n            size\n            image {\n              width\n              height\n            }\n          }\n          fileName\n          contentType\n          url\n        }\n      }\n    }\n    childPages {\n      id\n      title\n      slug\n      metaDescription\n      summary {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n    childPagesSecondary {\n      id\n      title\n      url\n      newWindow\n    }\n  }\n}\n\n`\n"],"sourceRoot":""}