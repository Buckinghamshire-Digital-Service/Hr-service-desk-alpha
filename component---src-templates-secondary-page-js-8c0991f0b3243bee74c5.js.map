{"version":3,"sources":["webpack:///./src/components/Download/Download.jsx","webpack:///./src/components/Feedback/Feedback.jsx","webpack:///./src/templates/secondaryPage.js","webpack:///./src/components/Breadcrumb/Breadcrumb.jsx"],"names":["Download","props","className","to","onClick","Event","Feedback","handleClick","bind","closeMessage","state","visible","componentDidMount","getCookie","this","id","setTimeout","setState","delay","ev","preventDefault","title","window","location","href","url","setCookie","render","iconClose","label","ClientOnly","Accent","modifier","type","aria-label","Svg","target","callToAction","React","Component","defaultProps","SecondaryPageTemplate","site","get","post","map","pageContext","Layout","hasSearch","hero","ga","gaConfig","metaTitle","rel","basePath","pathname","name","content","metaDescription","Main","Breadcrumb","parent","parentPage","PageTitle","text","Text","intro","childMarkdownRemark","html","bodyText","flush","feedback","PureComponent","path","split","filter","v","pop","join","undefined"],"mappings":"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","file":"component---src-templates-secondary-page-js-8c0991f0b3243bee74c5.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst Download = props => {\n  return (\n    <div className={`panel panel--inverted panel--padding-small`}>\n      <Link to='/downloads' className='download-link lead flush padding--h-flush d-block' onClick={() => Event('Download items link','Click')}>\n        <span>Go to document download</span>\n        <span className='download download--small spaced-left'></span>\n      </Link>\n    </div>\n  )\n}\n\nexport default Download\n\n\n\n\n","import React from 'react'\nimport Accent from '../Accent/Accent.jsx'\nimport Svg from '../Svg/Svg.jsx'\nimport Anchor from '../Anchor/Anchor.jsx'\nimport { ClientOnly } from '../ClientOnly/ClientOnly'\nimport { getCookie, setCookie } from '../../lib/cookie.js'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nexport default class Feedback extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.closeMessage = this.closeMessage.bind(this)\n    this.state = {\n      visible: false\n    }\n  }\n\n  componentDidMount() {\n    let cookieValue = getCookie(`feedback-${this.props.id}`)\n    if (!cookieValue) {\n      setTimeout(() => {\n        this.setState({\n          visible: true\n        })\n      }, (this.props.delay * 1000))\n    }\n  }\n\n  handleClick(ev) {\n    ev.preventDefault()\n    Event('Request to feedback', 'Click', this.props.id + ' - ' + this.props.title)\n    window.location.href = this.props.url\n  }\n\n  closeMessage() {\n    this.setState({\n      visible: false\n    })\n    setCookie(`feedback-${this.props.id}`, 1, 365)\n  }\n\n  render() {\n    let iconClose = {\n      label: 'close',\n      url: '../../../svg/cross-black.svg'\n    }    \n    return (\n      <ClientOnly>\n        {this.state.visible &&\n          <Accent className='accent--loud accent--fixed' modifier='container container--padded is-relative has-icon'>\n            <button type='button'\n             className='btn btn--flat close close--top'\n             aria-label='Close pop up message'\n             onClick={this.closeMessage.bind(this)}>\n             <Svg {...iconClose}/>\n            </button>\n            {this.props.title}\n            {this.props.url && <a className='spaced-left' target='_blank' onClick={this.handleClick} href={this.props.url}>{this.props.callToAction}</a>}\n          </Accent>\n        }\n      </ClientOnly>\n    )\n  }\n}\n\nFeedback.defaultProps = {\n  delay: 0\n}\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Layout from '../components/Layout/Layout.jsx'\nimport Main from '../components/Main/Main.jsx'\nimport Text from '../components/Text/Text.jsx'\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb.jsx'\nimport PageTitle from '../components/PageTitle/PageTitle.jsx'\nimport Download from '../components/Download/Download.jsx'\nimport Feedback from '../components/Feedback/Feedback.jsx'\n\nclass SecondaryPageTemplate extends React.PureComponent {\n  render() {\n    const site = get(this.props, 'data.site.siteMetadata')\n    const post = get(this.props, 'data.contentfulSecondaryPage')\n    const map = this.props.pageContext.map\n    \n    return (\n      <Layout location={this.props.location} hasSearch className='full-width' hero={post.hero} ga={site.gaConfig.id} map={map}>\n        <Helmet>\n          <title>{`${post.metaTitle} | ${site.title}`}</title>\n          <link rel='canonical' href={`${site.basePath}${this.props.location.pathname}`} />\n          <meta name='description' content={post.metaDescription} />    \n        </Helmet>\n        <Main className='full-width'>\n          {this.props.location && <Breadcrumb location={this.props.location} parent={post.parentPage} className='container'/>}\n          <div className='container'>\n            <PageTitle text={post.title}/>\n            <Text className='intro lead' content={post.intro.childMarkdownRemark.html} />\n            {post.bodyText && <Text className='long-form constrained constrained--wide' content={post.bodyText.childMarkdownRemark.html} />}\n            <Download flush/>\n          </div>\n        </Main>\n        {post.feedback && <Feedback {...post.feedback}/>}\n      </Layout>\n    )\n  }\n}\n\nexport default SecondaryPageTemplate\n\nexport const secondaryPageQuery = graphql`\n  query SecondaryPageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        basePath\n        gaConfig {\n          id\n        }        \n      }\n    }     \n    contentfulSecondaryPage(slug: {eq: $slug}) {\n      title\n      metaTitle\n      metaDescription\n      intro {\n        childMarkdownRemark {\n          html\n        }\n      }\n\n      bodyText {\n        childMarkdownRemark {\n          html\n        }\n      }\n\n      hero {\n        headline\n        subHeading\n        image {\n          title\n          description\n          file {\n            details {\n              size\n              image {\n                width\n                height\n              }\n            }\n            fileName\n            contentType\n            url\n          }\n        }\n      }\n\n      feedback {\n        callToAction\n        delay\n        id\n        url\n        title\n      }      \n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst Breadcrumb = props => {\n  const { pathname } = props.location\n  let path = pathname.split('/').filter(v => v !== '')\n  path.pop()\n  path = path.join('/')\n  const title = props.parent && props.parent.title !== undefined ? props.parent.title : 'Homepage'\n\n  return (\n    <div className={`breadcrumb ${props.className}`} aria-label='Breadcrumb'>\n      <Link to={`/${path}`} onClick={() => Event('Breadcrumb link','Click',`/${path}`)} className='breadcrumb__link'>\n        <p className='has-chevron has-chevron--reversed'><span className='underlined'>Back to {title}</span></p>\n      </Link>\n    </div>\n  )\n}\n\nBreadcrumb.defaultProps = {\n  className: ''\n}\n\nexport default Breadcrumb"],"sourceRoot":""}