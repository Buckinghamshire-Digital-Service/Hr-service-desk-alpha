{"version":3,"sources":["webpack:///./src/components/Download/Download.jsx","webpack:///./src/components/LinkList/LinkListSimple.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es.string.link.js","webpack:///./node_modules/gatsby/node_modules/core-js/internals/create-html.js","webpack:///./src/components/ButtonGroup/ButtonGroup.jsx","webpack:///./src/components/LinkList/LinkList.jsx","webpack:///./src/components/Collapsible/Collapsible.jsx","webpack:///./src/templates/detailPage.js","webpack:///./node_modules/gatsby/node_modules/core-js/internals/string-html-forced.js","webpack:///./src/components/LinkItem/LinkItem.jsx"],"names":["Download","props","className","to","onClick","Event","LinkListSimple","items","undefined","map","v","i","external","newWindow","key","href","url","rel","eventName","title","text","type","defaultProps","$","createHTML","target","proto","forced","forcedStringHTMLMethod","link","this","requireObjectCoercible","quot","module","exports","string","tag","attribute","value","S","String","p1","replace","ButtonGroup","children","LinkList","parentPage","slug","content","summary","childMarkdownRemark","html","metaDescription","Heading","simple","Text","Button","tabIndex","aria-label","clickHandler","Collapsible","id","returnId","state","visible","open","height","actualHidden","history","hash","dir","toggle","event","preventDefault","eventAndAria","setTimeout","setState","panel","clientHeight","path","window","location","pathname","replaceState","document","componentDidMount","scrollIntoView","node","render","label","ariaLabel","classes","classNames","contentClasses","toggleClass","hidden","ref","role","bind","aria-expanded","aria-controls","aria-hidden","aria-labelledby","style","mediaLink","description","Anchor","links","React","PureComponent","PageTemplate","pageContext","site","get","post","parent","mediaLinks","collapsibleLinks","filter","mediaFile","file","reduce","a","b","concat","Layout","hasSearch","hero","ga","gaConfig","basePath","name","Main","Breadcrumb","PageTitle","intro","body","length","LinkItem","flush","fails","METHOD_NAME","test","toLowerCase","split","c","isLocked"],"mappings":"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","file":"component---src-templates-detail-page-js-e140e3cb416f0511fee3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst Download = props => {\n  return (\n    <div className={`panel panel--inverted panel--padding-small`}>\n      <Link to='/downloads' className='download-link lead flush padding--h-flush d-block' onClick={() => Event('Download items link','Click')}>\n        <span>Go to document download</span>\n        <span className='download download--small spaced-left'></span>\n      </Link>\n    </div>\n  )\n}\n\nexport default Download\n\n\n\n\n","import React from 'react'\nimport Heading from '../Heading/Heading.jsx'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst LinkListSimple = props => {\n  const items = props.items['en-US'] !== undefined ? props.items['en-US'] : props.items\n\n  return (\n    <ul className={`list ${props.className}`}>\n      {items && items.map((v, i) => {\n        const external = {'target': v.newWindow === true ? '_blank' : null}\n        return (\n          <li className='list__item' key={i}>\n            <a href={v.url} rel='noreferrer' className='list-item__link' onClick={() => Event(`${props.eventName}`, 'Click',v.title)} {...external}>\n              <Heading text={v.title} type='span' className='list-item__title has-chevron'/>\n            </a>\n          </li>\n        )\n      }\n    )}\n    </ul>\n  )\n}\n\nLinkListSimple.defaultProps = {\n  className: '',\n  eventName: 'Homepage external links'\n}\n\nexport default LinkListSimple","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.es/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar quot = /\"/g;\n\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = String(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","import React from 'react'\n\nconst ButtonGroup = props => {\n  return (\n    <div className={`button-group ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}\n\nButtonGroup.defaultProps ={\n  className: ''\n}\n\nexport default ButtonGroup\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Heading from '../Heading/Heading.jsx'\nimport Text from '../Text/Text.jsx'\nimport Button from '../Button/Button.jsx'\nimport ButtonGroup from '../ButtonGroup/ButtonGroup.jsx'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nconst ctaClick = (title) => {\n  Event('CTA links homepage','Click',title)\n}\n\nconst LinkList = props => {\n  const items = props.items['en-US'] !== undefined ? props.items['en-US'] : props.items\n\n  return (\n    <ul className={`list ${props.className}`}>\n      {items && items.map((v, i) => {\n        const link = (v.parentPage && v.parentPage.slug) !== undefined ? `/${v.parentPage.slug}/${v.slug}/` : `/${v.slug}/`\n        const content = (v.summary && v.summary.childMarkdownRemark.html) ? v.summary.childMarkdownRemark.html : v.metaDescription\n\n        return (\n          <li className='column is-half-tablet' key={i}>\n            <div className='list__item list__item--has-button'>\n              <Link to={link} className='list-item__link' onClick={() => Event('Top level links homepage','Click', v.title)}>\n                <Heading text={v.title} type={props.type} className={`list-item__title ${props.simple ? 'has-chevron' : ''}`}/>\n              </Link>\n              {content && <Text content={content} />}\n              <ButtonGroup className='button-group--fixed'>\n                <Button url={link} tabIndex='-1' className='btn--has-radius btn--primary btn--full-width' aria-label='Top level sections' clickHandler={() => ctaClick(v.title)} aria-label={`Find out more about ${v.title}`}>\n                  More on {v.title}\n                </Button>\n              </ButtonGroup>\n            </div>\n          </li>\n        )\n      }\n    )}\n    </ul>\n  )\n}\n\nLinkList.defaultProps = {\n  className: '',\n  type: 'h2'\n}\n\nexport default LinkList","import React from 'react'\nimport classNames from 'classnames'\nimport Anchor from '../Anchor/Anchor.jsx'\nimport { scrollIntoView, returnId } from '../../utilities'\nimport Text from '../Text/Text.jsx'\nimport { Event } from '../GoogleAnalytics/GoogleAnalytics'\n\nexport default class Collapsible extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.title = this.props.title\n    this.id = returnId(this.title)\n    this.state = {\n      visible: this.props.open === true || this.props.className === 'collapsible_trigger--active',\n      height: 0,\n      actualHidden: (this.props.history && (this.props.history.hash === '#' + this.id)) ? false : true,\n      dir: 'down'      \n    }\n  }\n\n  toggle (event) {\n    event.preventDefault()\n    this.eventAndAria()\n\n    setTimeout(() => {\n      this.setState({\n        visible: !this.state.visible,\n        dir: !this.state.visible ? 'up' : 'down',\n        height: !this.state.visible ? this.panel.clientHeight : 0\n      })\n    }, 0) \n\n    if (this.props.history) {\n      if ('replaceState' in history) {\n        let path = (window.location.hash === `#${this.id}`) ? this.props.history.pathname : event.target.href\n        window.history.replaceState({}, document.title, path)\n      }\n    }\n\n  }\n\n  eventAndAria() {\n    // only send on opening \n    if (!this.state.visible) {\n      Event('Collapsible','Open collapsible',this.props.title)\n      \n      this.setState({\n        actualHidden: false\n      })\n    } else {\n      setTimeout(() => {\n        this.setState({\n          actualHidden: true\n        })\n      }, 500)       \n    }\n  }\n\n  componentDidMount () {\n\n    if (this.props.history && (this.props.history.hash === '#' + this.id)) {\n      this.setState({ \n        visible: true,\n        actualHidden: false,\n        height: this.panel.clientHeight \n      })\n\n      scrollIntoView(this.node)\n      return\n    }\n\n    this.setState({\n      height: this.state.visible ? this.panel.clientHeight : 0\n    })\n\n  }\n\n  render () {\n    let label = this.props.ariaLabel\n\n    let classes = classNames('collapsible collapsible--chevron', this.props.className, {\n      'collapsible--active': this.state.visible\n    })\n    let contentClasses = classNames('collapsible__content', {\n      'collapsible__content--active': this.state.visible\n    })\n    let toggleClass = classNames('collapsible__trigger', {\n      'collapsible__trigger--active': this.state.visible\n    })\n\n    let hidden = this.state.actualHidden ? { 'hidden': true } : null\n\n    return (\n      <div className={classes} ref={node => { this.node = node }}>\n        <div className='collapsible__wrapper'>\n          <h2 className='collapsible__title'>\n            <a role='button' href={`#${this.id}`} id={this.id} className={toggleClass} onClick={this.toggle.bind(this)} aria-expanded={this.state.visible} aria-controls={`section-${this.id}`} aria-label={label || this.title}>\n            {this.title}\n            </a>\n          </h2>\n          <div className={contentClasses} aria-hidden={!this.state.visible} id={`section-${this.id}`} {...hidden} role='region' aria-labelledby={this.id} style={{height: this.state.height}}>\n            <div className='collapsible__inner' ref={panel => { this.panel = panel }}>\n              <Text content={this.props.content.childMarkdownRemark.html}/>\n              {this.props.mediaLink && <ul className='list list--no-bullet'>{this.props.mediaLink.map(v => <li key={v.id} className='list__item'><a className={`list__link text-link ${v.type}`} href={v.mediaLink} onClick={() => Event('Media download link','Click',v.title) }>{`${v.title}${v.description !== null ? ' - ' + v.description : ''}`}</a></li>)}</ul>}\n              {this.props.link && <Anchor className='text-link' href={`/${this.props.links[this.props.link.id]}`} text={`Read more about ${this.props.link.title}`} onClick={() => Event('Collapsible link','Click',this.props.link.title)}/>}\n            </div>        \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Layout from '../components/Layout/Layout.jsx'\nimport LinkList from '../components/LinkList/LinkList.jsx'\nimport LinkListSimple from '../components/LinkList/LinkListSimple.jsx'\nimport LinkItem from '../components/LinkItem/LinkItem.jsx'\nimport Main from '../components/Main/Main.jsx'\nimport Text from '../components/Text/Text.jsx'\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb.jsx'\nimport PageTitle from '../components/PageTitle/PageTitle.jsx'\nimport Collapsible from '../components/Collapsible/Collapsible.jsx'\nimport Download from '../components/Download/Download.jsx'\nimport { Event } from '../components/GoogleAnalytics/GoogleAnalytics'\nimport Heading from '../components/Heading/Heading.jsx'\n\nclass PageTemplate extends React.PureComponent {\n\n  render() {\n    const map = this.props.pageContext.map\n    const site = get(this.props, 'data.site.siteMetadata')\n    const post = get(this.props, 'data.contentfulPage')\n    const parent = post.parentPage ? {'parentPage': true} : null\n    let mediaLinks = post.collapsibleLinks ? post.collapsibleLinks\n      .filter(v => v['mediaLink'] !== null || v.mediaFile !== undefined)\n      .map(v => v['mediaLink'] || (v.mediaFile && v.mediaFile.file.url))\n      .reduce((a,b) => a.concat(b), []): []\n            \n      mediaLinks = mediaLinks\n        .concat(post.mediaLink || [])\n        // .filter(item => mediaLinks.indexOf(item) < 0)\n        .map(v => {\n          v['mediaLink'] = v['mediaLink'] !== null ? v['mediaLink'] : (v.mediaFile && v.mediaFile.file) && 'https:' + v.mediaFile.file.url        \n          return v\n        })\n\n\n    return (\n      <Layout location={this.props.location} hasSearch className='full-width' hero={post.hero} ga={site.gaConfig.id} map={map} {...parent}>\n        <Helmet>\n          <title>{`${post.title} | ${site.title}`}</title>\n          <link rel='canonical' href={`${site.basePath}${this.props.location.pathname}`} />\n          <meta name='description' content={post.metaDescription} />    \n        </Helmet>\n        <Main className='full-width'>\n          {this.props.location && <Breadcrumb location={this.props.location} parent={post.parentPage} className='container'/>}\n          <div className='container'>\n            <PageTitle text={post.title}/>\n            <Text className='intro lead' content={post.intro.childMarkdownRemark.html} />\n            {post.body && <Text className='body long-form' content={post.body.childMarkdownRemark.html} />}\n          </div>\n          {post.collapsibleLinks && <div className='body-content'>{post.collapsibleLinks.map((v, i) => <Collapsible links={map} key={i} history={this.props.location} {...v}/>)}</div>}\n          {(mediaLinks.length > 0) && \n         \n            <div className='container panel--padding-small'>\n              <Heading text='Downloads in this page' className='h4 sp-top--single'/>\n              <ol className='list list--separated list--separated-small'>{mediaLinks.map(v => <LinkItem event={Event} key={v.id} {...v} />)}</ol>\n            </div>}\n          <div className='container'>\n            <Download flush/>\n          </div>\n        </Main>\n      </Layout>\n    )\n  }\n}\n\nexport default PageTemplate\n\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        basePath\n        gaConfig {\n          id\n        }        \n      }\n    }    \n    contentfulPage(slug: {eq: $slug}) {\n      title\n      metaTitle\n      metaDescription\n      parentPage {\n        slug\n        title\n      }\n\n      intro {\n        childMarkdownRemark {\n          html\n        }\n      }\n\n      body {\n        childMarkdownRemark {\n          html\n        }\n      }\n\n      hero {\n        headline\n        subHeading\n        image {\n          title\n          description\n          file {\n            details {\n              size\n              image {\n                width\n                height\n              }\n            }\n            fileName\n            contentType\n            url\n          }\n        }\n      }\n\n      collapsibleLinks {\n        title\n        ariaLabel\n        content {\n          childMarkdownRemark {\n            html\n          }\n        }\n        open\n        link {\n          id\n          title\n          slug\n        }\n        mediaLink {\n          id\n          type\n          title\n          mediaLink\n          description\n\n          mediaFile {\n            file {\n              fileName\n              url\n            }\n          }           \n        }\n      }\n\n      mediaLink {\n        id\n        type\n        title\n        mediaLink\n        description\n\n        mediaFile {\n          file {\n            fileName\n            url\n          }\n        }         \n      }\n\n    }\n  }\n`\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","import React from 'react'\n\nconst LinkItem = props => {\n  return (\n    <li className='list-item'>\n      <a href={props.mediaLink} className={`download-block list__link ${props.c}`} onClick={() => props.event('Document download','Click',props.title)} target='_blank' rel='noreferrer'>\n        <span className='download '><span className='is-sr-only'>Download</span></span>\n        <p className={`lead sp--flush ${props.isLocked ? 'locked' : ''}`}><strong>{props.title}</strong></p>\n        {props.description && <p className='no-underline'>{props.description}</p>}\n      </a>\n    </li>\n  )    \n}\n\nLinkItem.defaultProps = {\n  c: ''\n}\n\nexport default LinkItem"],"sourceRoot":""}